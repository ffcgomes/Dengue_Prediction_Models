source('~/.active-rstudio-document')
install.packages("h20")
install.packages("h2o")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library("ggplot2") #Visualization
library("ggfortify") #Visualization
library("tseries") #Statistical Tests for Time Series data
library("forecast") #Modeling and Forecasting
library(shiny)
infectados<-read.csv("infectadosFortalezaAte2017.csv",h=T)
head(infectados)
infectados$semana = factor(infectados$semana)
infectados$cidade = factor(infectados$cidade)
str(infectados)
setwd("C:/Users/ffcgo/Google Drive/DS/_Modelos_Machine_Learning/Dengue_Prediction/Arima")
library("ggplot2") #Visualization
library("ggfortify") #Visualization
library("tseries") #Statistical Tests for Time Series data
library("forecast") #Modeling and Forecasting
library(shiny)
infectados<-read.csv("infectadosFortalezaAte2017.csv",h=T)
head(infectados)
infectados$semana = factor(infectados$semana)
infectados$cidade = factor(infectados$cidade)
str(infectados)
infectadosPorCidade = aggregate(infectados~semana+cidade,infectados,sum)
#infectadosPorCidade
str(infectadosPorCidade)
summary(infectadosPorCidade)
```
#Temporal Spatial Heatmap
```{r}
#Temporal Spatial Heatmap
ggplot(infectadosPorCidade,aes(semana,cidade,fill=infectados))+geom_tile()+
scale_fill_gradient2(low = "white",mid = "blue",high = "red",midpoint = 500)+
scale_x_discrete(breaks = c(seq(2007,2017,1)))+ xlab(label="Semana")+ylab(label="Cidade")+
ggtitle("Casos de Dengue por semana e por cidade")+
theme(
axis.title.x = element_text(size=10, face="bold"),
axis.title.y = element_text(size=10, face="bold"))
```
Gráfico de Séries Temporais
Podemos investigar a tendência para todo o estado usando um gráfico de séries temporais. Agregaremos nossos dados de cidade para extrapolar valores para toda o Ceará
```{r}
infectadosPorAno<-aggregate(infectados~semana+ano,infectados,sum)
str(infectadosPorAno)
#infectadosPorAno
```
Converte dados para Série Temporal
```{r}
infectadosPorAnoST<-ts(infectadosPorAno$infectados,c(2007,1),c(2019,12),12)
#Plot Série Temporal
autoplot(infectadosPorAnoST)+xlab(label = "TIME")+
ylab(label = "Casos de Infectados")+
ggtitle("Infectados pro dengue no Ceará")
```
A parcela exploratória acima cimentou nossa constatação no gráfico anterior de que os casos de dengue foram relativamente maiores entre 2012 e 2014, mas também revela uma aparente baixa sazonalidade nos dados agrupados .
infectadosPorCidade = aggregate(infectados~semana+cidade,infectados,sum)
#infectadosPorCidade
str(infectadosPorCidade)
summary(infectadosPorCidade)
ggplot(infectadosPorCidade,aes(semana,cidade,fill=infectados))+geom_tile()+
scale_fill_gradient2(low = "white",mid = "blue",high = "red",midpoint = 500)+
scale_x_discrete(breaks = c(seq(2007,2017,1)))+ xlab(label="Semana")+ylab(label="Cidade")+
ggtitle("Casos de Dengue por semana e por cidade")+
theme(
axis.title.x = element_text(size=10, face="bold"),
axis.title.y = element_text(size=10, face="bold"))
infectadosPorAno<-aggregate(infectados~semana+ano,infectados,sum)
str(infectadosPorAno)
infectadosPorAnoST<-ts(infectadosPorAno$infectados,c(2007,1),c(2019,12),12)
#Plot Série Temporal
autoplot(infectadosPorAnoST)+xlab(label = "TIME")+
ylab(label = "Casos de Infectados")+
ggtitle("Infectados pro dengue no Ceará")
```
A parcela exploratória acima cimentou nossa constatação no gráfico anterior de que os casos de dengue foram relativamente maiores entre 2012 e 2014, mas também revela uma aparente baixa sazonalidade nos dados agrupados .
infectadosPorAno<-aggregate(infectados~semana+ano,infectados,sum)
str(infectadosPorAno)
#infectadosPorAno
infectadosPorAnoST<-ts(infectadosPorAno$infectados,c(2007,1),c(2019,12),12)
autoplot(infectadosPorAnoST)+xlab(label = "TIME")+
ylab(label = "Casos de Infectados")+
ggtitle("Infectados pro dengue no Ceará")
autoplot(decompose(infectadosPorAnoST))
#Testar estacionariedade de dados de séries temporais
adf.test((infectadosPorAnoST))
adf.test((infectadosPorAnoST))
#Como nosso valor p é menor que nosso nível de significância de 0,05, podemos concluir #que nossos dados de séries temporais são estacionários. Nas estatísticas, um conjunto #de dados de séries temporais não estacionárias geralmente leva a uma regressão espúria. Uma série temporal estacionária é aquela cujas propriedades estatísticas como média, variação, autocorrelação etc. são constantes ao longo do tempo. A maioria dos métodos de previsão estatística baseia-se no pressuposto de que as séries temporais podem ser renderizadas aproximadamente estacionárias (isto é, "estacionadas") através do uso de transformações matemáticas. Uma série estacionarizada é relativamente fácil de prever: você simplesmente prevê que suas propriedades estatísticas serão as mesmas no futuro, como no passado! Estacionar uma série temporal através da diferenciação (quando necessário) é uma parte importante do processo de adaptação de um modelo ARIMA, que usaríamos para prever valores futuros de casos de dengue no Ceará. Como o P-value foi próximo de 0,05, vamos considerar a série como não estacionária
```{r}
#Verifique o número de diferenças de lag / s necessárias para estacionarizar séries temporais
```
#Verifique o número de diferenças de lag / s necessárias para estacionarizar séries temporais
#Como nosso valor p é menor que nosso nível de significância de 0,05, podemos concluir #que nossos dados de séries temporais são estacionários. Nas estatísticas, um conjunto #de dados de séries temporais não estacionárias geralmente leva a uma regressão espúria. Uma série temporal estacionária é aquela cujas propriedades estatísticas como média, variação, autocorrelação etc. são constantes ao longo do tempo. A maioria dos métodos de previsão estatística baseia-se no pressuposto de que as séries temporais podem ser renderizadas aproximadamente estacionárias (isto é, "estacionadas") através do uso de transformações matemáticas. Uma série estacionarizada é relativamente fácil de prever: você simplesmente prevê que suas propriedades estatísticas serão as mesmas no futuro, como no passado! Estacionar uma série temporal através da diferenciação (quando necessário) é uma parte importante do processo de adaptação de um modelo ARIMA, que usaríamos para prever valores futuros de casos de dengue no Ceará. Como o P-value foi próximo de 0,05, vamos considerar a série como não estacionária
#Testar estacionariedade de dados de séries temporais
adf.test((infectadosPorAnoST))
ndiffs(infectadosPorAnoST)
ndiffs(infectadosPorAnoST)
#Perform lag 1 differencing
infectadosPorAnoSTDiff<-diff(infectadosPorAnoST)
#Plot differenced data
autoplot(infectadosPorAnoSTDiff)
```
```{r}
#Check stationarity of differenced data
adf.test(infectadosPorAnoSTDiff)
```
Agora temos uma série temporal estacionária. Agora estamos prontos para construir um modelo!
ndiffs(infectadosPorAnoST)
#Perform lag 1 differencing
infectadosPorAnoSTDiff<-diff(infectadosPorAnoST)
#Plot differenced data
autoplot(infectadosPorAnoSTDiff)
```
```{r}
#Check stationarity of differenced data
adf.test(infectadosPorAnoSTDiff)
```
Agora temos uma série temporal estacionária. Agora estamos prontos para construir um modelo!
infectadosPorAnoSTDiff<-diff(infectadosPorAnoST)
autoplot(infectadosPorAnoSTDiff)
#Check stationarity of differenced data
adf.test(infectadosPorAnoSTDiff)
infectados_arima<-auto.arima(infectadosPorAnoST)
infectados_arima
#Utilizamos a função auto.arima () do pacote "forecast". Ele recomendou uma função autorregressiva do atraso 3 (p), com diferenciação do atraso 1 (d), e o modelo móvel móvel do atraso 2. Não usamos os dados diferenciados, mas o conjunto de dados real em vez disso, para demonstrar que a função auto.arima () identificou com êxito o número de diferenças de lag necessário para estacionarizar nossos dados.
infectados_previsao<-forecast(infectados_arima,12)
autoplot(infectados_previsao)+
ylab(label = "Previsão de Casos de Dengue - Ceará")
